
Mihnea.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ba  00800100  00000b9a  00000c0e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b9a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000cc8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d24  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  00000d64  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001177  00000000  00000000  00000e7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000aca  00000000  00000000  00001ff3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000936  00000000  00000000  00002abd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000031c  00000000  00000000  000033f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000581  00000000  00000000  00003710  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007c6  00000000  00000000  00003c91  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e8  00000000  00000000  00004457  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 37 02 	jmp	0x46e	; 0x46e <__vector_5>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  68:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  6c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  70:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  74:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  78:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d4 e0       	ldi	r29, 0x04	; 4
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ea e9       	ldi	r30, 0x9A	; 154
  90:	fb e0       	ldi	r31, 0x0B	; 11
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	aa 3b       	cpi	r26, 0xBA	; 186
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>
  9e:	0e 94 60 02 	call	0x4c0	; 0x4c0 <main>
  a2:	0c 94 cb 05 	jmp	0xb96	; 0xb96 <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <LCD_read>:
{
    /* TODO task 1 LCD */

    LCD_writeInstr(LCD_INSTR_DDRAM + addr);
    LCD_putChar(c);
}
  aa:	7f 92       	push	r7
  ac:	8f 92       	push	r8
  ae:	9f 92       	push	r9
  b0:	af 92       	push	r10
  b2:	bf 92       	push	r11
  b4:	cf 92       	push	r12
  b6:	df 92       	push	r13
  b8:	ef 92       	push	r14
  ba:	ff 92       	push	r15
  bc:	0f 93       	push	r16
  be:	1f 93       	push	r17
  c0:	cf 93       	push	r28
  c2:	df 93       	push	r29
  c4:	27 b1       	in	r18, 0x07	; 7
  c6:	27 78       	andi	r18, 0x87	; 135
  c8:	27 b9       	out	0x07, r18	; 7
  ca:	28 b1       	in	r18, 0x08	; 8
  cc:	27 78       	andi	r18, 0x87	; 135
  ce:	28 b9       	out	0x08, r18	; 8
  d0:	17 9a       	sbi	0x02, 7	; 2
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <LCD_read+0x2a>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <LCD_read+0x2c>
  d6:	26 b1       	in	r18, 0x06	; 6
  d8:	b6 b1       	in	r27, 0x06	; 6
  da:	a6 b1       	in	r26, 0x06	; 6
  dc:	76 b0       	in	r7, 0x06	; 6
  de:	17 98       	cbi	0x02, 7	; 2
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <LCD_read+0x38>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <LCD_read+0x3a>
  e4:	17 9a       	sbi	0x02, 7	; 2
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <LCD_read+0x3e>
  e8:	00 c0       	rjmp	.+0      	; 0xea <LCD_read+0x40>
  ea:	86 b0       	in	r8, 0x06	; 6
  ec:	96 b0       	in	r9, 0x06	; 6
  ee:	b6 b0       	in	r11, 0x06	; 6
  f0:	a6 b0       	in	r10, 0x06	; 6
  f2:	17 98       	cbi	0x02, 7	; 2
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <LCD_read+0x4c>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <LCD_read+0x4e>
  f8:	37 b1       	in	r19, 0x07	; 7
  fa:	38 67       	ori	r19, 0x78	; 120
  fc:	37 b9       	out	0x07, r19	; 7
  fe:	26 95       	lsr	r18
 100:	26 95       	lsr	r18
 102:	26 95       	lsr	r18
 104:	80 e8       	ldi	r24, 0x80	; 128
 106:	28 9f       	mul	r18, r24
 108:	e0 01       	movw	r28, r0
 10a:	11 24       	eor	r1, r1
 10c:	9e 01       	movw	r18, r28
 10e:	33 27       	eor	r19, r19
 110:	b4 fb       	bst	r27, 4
 112:	88 27       	eor	r24, r24
 114:	80 f9       	bld	r24, 0
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	00 24       	eor	r0, r0
 11a:	96 95       	lsr	r25
 11c:	87 95       	ror	r24
 11e:	07 94       	ror	r0
 120:	96 95       	lsr	r25
 122:	87 95       	ror	r24
 124:	07 94       	ror	r0
 126:	98 2f       	mov	r25, r24
 128:	80 2d       	mov	r24, r0
 12a:	82 2b       	or	r24, r18
 12c:	93 2b       	or	r25, r19
 12e:	a5 fb       	bst	r26, 5
 130:	ee 24       	eor	r14, r14
 132:	e0 f8       	bld	r14, 0
 134:	f1 2c       	mov	r15, r1
 136:	d7 01       	movw	r26, r14
 138:	aa 0f       	add	r26, r26
 13a:	bb 1f       	adc	r27, r27
 13c:	a2 95       	swap	r26
 13e:	b2 95       	swap	r27
 140:	b0 7f       	andi	r27, 0xF0	; 240
 142:	ba 27       	eor	r27, r26
 144:	a0 7f       	andi	r26, 0xF0	; 240
 146:	ba 27       	eor	r27, r26
 148:	a8 2b       	or	r26, r24
 14a:	b9 2b       	or	r27, r25
 14c:	76 fa       	bst	r7, 6
 14e:	00 27       	eor	r16, r16
 150:	00 f9       	bld	r16, 0
 152:	10 e0       	ldi	r17, 0x00	; 0
 154:	c8 01       	movw	r24, r16
 156:	82 95       	swap	r24
 158:	92 95       	swap	r25
 15a:	90 7f       	andi	r25, 0xF0	; 240
 15c:	98 27       	eor	r25, r24
 15e:	80 7f       	andi	r24, 0xF0	; 240
 160:	98 27       	eor	r25, r24
 162:	8a 2b       	or	r24, r26
 164:	9b 2b       	or	r25, r27
 166:	83 fa       	bst	r8, 3
 168:	cc 24       	eor	r12, r12
 16a:	c0 f8       	bld	r12, 0
 16c:	d1 2c       	mov	r13, r1
 16e:	96 01       	movw	r18, r12
 170:	22 0f       	add	r18, r18
 172:	33 1f       	adc	r19, r19
 174:	22 0f       	add	r18, r18
 176:	33 1f       	adc	r19, r19
 178:	22 0f       	add	r18, r18
 17a:	33 1f       	adc	r19, r19
 17c:	94 fa       	bst	r9, 4
 17e:	ee 27       	eor	r30, r30
 180:	e0 f9       	bld	r30, 0
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	ee 0f       	add	r30, r30
 186:	ff 1f       	adc	r31, r31
 188:	ee 0f       	add	r30, r30
 18a:	ff 1f       	adc	r31, r31
 18c:	2e 2b       	or	r18, r30
 18e:	3f 2b       	or	r19, r31
 190:	a6 fa       	bst	r10, 6
 192:	44 27       	eor	r20, r20
 194:	40 f9       	bld	r20, 0
 196:	50 e0       	ldi	r21, 0x00	; 0
 198:	42 2b       	or	r20, r18
 19a:	53 2b       	or	r21, r19
 19c:	b5 fa       	bst	r11, 5
 19e:	66 27       	eor	r22, r22
 1a0:	60 f9       	bld	r22, 0
 1a2:	70 e0       	ldi	r23, 0x00	; 0
 1a4:	66 0f       	add	r22, r22
 1a6:	77 1f       	adc	r23, r23
 1a8:	46 2b       	or	r20, r22
 1aa:	57 2b       	or	r21, r23
 1ac:	84 2b       	or	r24, r20
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	1f 91       	pop	r17
 1b4:	0f 91       	pop	r16
 1b6:	ff 90       	pop	r15
 1b8:	ef 90       	pop	r14
 1ba:	df 90       	pop	r13
 1bc:	cf 90       	pop	r12
 1be:	bf 90       	pop	r11
 1c0:	af 90       	pop	r10
 1c2:	9f 90       	pop	r9
 1c4:	8f 90       	pop	r8
 1c6:	7f 90       	pop	r7
 1c8:	08 95       	ret

000001ca <LCD_readStatus>:
 1ca:	15 98       	cbi	0x02, 5	; 2
 1cc:	16 9a       	sbi	0x02, 6	; 2
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <LCD_readStatus+0x6>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <LCD_readStatus+0x8>
 1d2:	0e 94 55 00 	call	0xaa	; 0xaa <LCD_read>
 1d6:	08 95       	ret

000001d8 <LCD_isBusy>:
 1d8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LCD_readStatus>
 1dc:	88 1f       	adc	r24, r24
 1de:	88 27       	eor	r24, r24
 1e0:	88 1f       	adc	r24, r24
 1e2:	08 95       	ret

000001e4 <LCD_waitNotBusy>:
 1e4:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCD_isBusy>
 1e8:	81 11       	cpse	r24, r1
 1ea:	fc cf       	rjmp	.-8      	; 0x1e4 <LCD_waitNotBusy>
 1ec:	08 95       	ret

000001ee <LCD_write>:
 1ee:	cf 93       	push	r28
 1f0:	17 9a       	sbi	0x02, 7	; 2
 1f2:	98 b1       	in	r25, 0x08	; 8
 1f4:	c8 2f       	mov	r28, r24
 1f6:	cc 1f       	adc	r28, r28
 1f8:	cc 27       	eor	r28, r28
 1fa:	cc 1f       	adc	r28, r28
 1fc:	cc 0f       	add	r28, r28
 1fe:	cc 0f       	add	r28, r28
 200:	cc 0f       	add	r28, r28
 202:	97 78       	andi	r25, 0x87	; 135
 204:	9c 2b       	or	r25, r28
 206:	86 fb       	bst	r24, 6
 208:	44 27       	eor	r20, r20
 20a:	40 f9       	bld	r20, 0
 20c:	50 e0       	ldi	r21, 0x00	; 0
 20e:	42 95       	swap	r20
 210:	52 95       	swap	r21
 212:	50 7f       	andi	r21, 0xF0	; 240
 214:	54 27       	eor	r21, r20
 216:	40 7f       	andi	r20, 0xF0	; 240
 218:	54 27       	eor	r21, r20
 21a:	49 2b       	or	r20, r25
 21c:	98 2f       	mov	r25, r24
 21e:	90 72       	andi	r25, 0x20	; 32
 220:	49 2b       	or	r20, r25
 222:	84 fb       	bst	r24, 4
 224:	aa 27       	eor	r26, r26
 226:	a0 f9       	bld	r26, 0
 228:	b0 e0       	ldi	r27, 0x00	; 0
 22a:	00 24       	eor	r0, r0
 22c:	b6 95       	lsr	r27
 22e:	a7 95       	ror	r26
 230:	07 94       	ror	r0
 232:	b6 95       	lsr	r27
 234:	a7 95       	ror	r26
 236:	07 94       	ror	r0
 238:	ba 2f       	mov	r27, r26
 23a:	a0 2d       	mov	r26, r0
 23c:	a4 2b       	or	r26, r20
 23e:	a8 b9       	out	0x08, r26	; 8
 240:	00 c0       	rjmp	.+0      	; 0x242 <LCD_write+0x54>
 242:	00 c0       	rjmp	.+0      	; 0x244 <LCD_write+0x56>
 244:	17 98       	cbi	0x02, 7	; 2
 246:	00 c0       	rjmp	.+0      	; 0x248 <LCD_write+0x5a>
 248:	00 c0       	rjmp	.+0      	; 0x24a <LCD_write+0x5c>
 24a:	17 9a       	sbi	0x02, 7	; 2
 24c:	98 b1       	in	r25, 0x08	; 8
 24e:	28 2f       	mov	r18, r24
 250:	21 70       	andi	r18, 0x01	; 1
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	00 24       	eor	r0, r0
 256:	36 95       	lsr	r19
 258:	27 95       	ror	r18
 25a:	07 94       	ror	r0
 25c:	36 95       	lsr	r19
 25e:	27 95       	ror	r18
 260:	07 94       	ror	r0
 262:	32 2f       	mov	r19, r18
 264:	20 2d       	mov	r18, r0
 266:	97 78       	andi	r25, 0x87	; 135
 268:	29 2b       	or	r18, r25
 26a:	98 2f       	mov	r25, r24
 26c:	98 70       	andi	r25, 0x08	; 8
 26e:	29 2b       	or	r18, r25
 270:	82 fb       	bst	r24, 2
 272:	ee 27       	eor	r30, r30
 274:	e0 f9       	bld	r30, 0
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	e2 95       	swap	r30
 27a:	f2 95       	swap	r31
 27c:	f0 7f       	andi	r31, 0xF0	; 240
 27e:	fe 27       	eor	r31, r30
 280:	e0 7f       	andi	r30, 0xF0	; 240
 282:	fe 27       	eor	r31, r30
 284:	e2 2b       	or	r30, r18
 286:	81 fb       	bst	r24, 1
 288:	66 27       	eor	r22, r22
 28a:	60 f9       	bld	r22, 0
 28c:	70 e0       	ldi	r23, 0x00	; 0
 28e:	66 0f       	add	r22, r22
 290:	77 1f       	adc	r23, r23
 292:	62 95       	swap	r22
 294:	72 95       	swap	r23
 296:	70 7f       	andi	r23, 0xF0	; 240
 298:	76 27       	eor	r23, r22
 29a:	60 7f       	andi	r22, 0xF0	; 240
 29c:	76 27       	eor	r23, r22
 29e:	6e 2b       	or	r22, r30
 2a0:	68 b9       	out	0x08, r22	; 8
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <LCD_write+0xb6>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <LCD_write+0xb8>
 2a6:	17 98       	cbi	0x02, 7	; 2
 2a8:	00 c0       	rjmp	.+0      	; 0x2aa <LCD_write+0xbc>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <LCD_write+0xbe>
 2ac:	cf 91       	pop	r28
 2ae:	08 95       	ret

000002b0 <LCD_writeInstr>:
 2b0:	cf 93       	push	r28
 2b2:	c8 2f       	mov	r28, r24
 2b4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_waitNotBusy>
 2b8:	15 98       	cbi	0x02, 5	; 2
 2ba:	16 98       	cbi	0x02, 6	; 2
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <LCD_writeInstr+0xe>
 2be:	00 c0       	rjmp	.+0      	; 0x2c0 <LCD_writeInstr+0x10>
 2c0:	8c 2f       	mov	r24, r28
 2c2:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write>
 2c6:	cf 91       	pop	r28
 2c8:	08 95       	ret

000002ca <LCD_init>:
 2ca:	87 b1       	in	r24, 0x07	; 7
 2cc:	88 67       	ori	r24, 0x78	; 120
 2ce:	87 b9       	out	0x07, r24	; 7
 2d0:	81 b1       	in	r24, 0x01	; 1
 2d2:	80 6e       	ori	r24, 0xE0	; 224
 2d4:	81 b9       	out	0x01, r24	; 1
 2d6:	15 98       	cbi	0x02, 5	; 2
 2d8:	16 98       	cbi	0x02, 6	; 2
 2da:	00 c0       	rjmp	.+0      	; 0x2dc <LCD_init+0x12>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <LCD_init+0x14>
 2de:	17 9a       	sbi	0x02, 7	; 2
 2e0:	88 b1       	in	r24, 0x08	; 8
 2e2:	87 78       	andi	r24, 0x87	; 135
 2e4:	80 62       	ori	r24, 0x20	; 32
 2e6:	88 b9       	out	0x08, r24	; 8
 2e8:	00 c0       	rjmp	.+0      	; 0x2ea <LCD_init+0x20>
 2ea:	00 c0       	rjmp	.+0      	; 0x2ec <LCD_init+0x22>
 2ec:	17 98       	cbi	0x02, 7	; 2
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <LCD_init+0x26>
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <LCD_init+0x28>
 2f2:	88 e2       	ldi	r24, 0x28	; 40
 2f4:	0e 94 58 01 	call	0x2b0	; 0x2b0 <LCD_writeInstr>
 2f8:	8f e0       	ldi	r24, 0x0F	; 15
 2fa:	0e 94 58 01 	call	0x2b0	; 0x2b0 <LCD_writeInstr>
 2fe:	86 e0       	ldi	r24, 0x06	; 6
 300:	0e 94 58 01 	call	0x2b0	; 0x2b0 <LCD_writeInstr>
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	0e 94 58 01 	call	0x2b0	; 0x2b0 <LCD_writeInstr>
 30a:	08 95       	ret

0000030c <LCD_writeData>:
 30c:	cf 93       	push	r28
 30e:	c8 2f       	mov	r28, r24
 310:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_waitNotBusy>
 314:	15 9a       	sbi	0x02, 5	; 2
 316:	16 98       	cbi	0x02, 6	; 2
 318:	00 c0       	rjmp	.+0      	; 0x31a <LCD_writeData+0xe>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <LCD_writeData+0x10>
 31c:	8c 2f       	mov	r24, r28
 31e:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write>
 322:	cf 91       	pop	r28
 324:	08 95       	ret

00000326 <LCD_print>:

// Afiseaza string-ul pe LCD incepand de la adresa curenta.
void LCD_print(const char* msg)
{
 326:	cf 93       	push	r28
 328:	df 93       	push	r29
 32a:	ec 01       	movw	r28, r24
    while(*msg)
 32c:	88 81       	ld	r24, Y
 32e:	88 23       	and	r24, r24
 330:	31 f0       	breq	.+12     	; 0x33e <LCD_print+0x18>
 332:	21 96       	adiw	r28, 0x01	; 1
}

// Afiseaza caracterul pe LCD la adresa curenta.
void LCD_putChar(char c)
{
    LCD_writeData(c);
 334:	0e 94 86 01 	call	0x30c	; 0x30c <LCD_writeData>
}

// Afiseaza string-ul pe LCD incepand de la adresa curenta.
void LCD_print(const char* msg)
{
    while(*msg)
 338:	89 91       	ld	r24, Y+
 33a:	81 11       	cpse	r24, r1
 33c:	fb cf       	rjmp	.-10     	; 0x334 <LCD_print+0xe>
        LCD_putChar(*msg++);
}
 33e:	df 91       	pop	r29
 340:	cf 91       	pop	r28
 342:	08 95       	ret

00000344 <LCD_printAt>:

// Afiseaza string-ul pe LCD incepand de la adresa primita.
void LCD_printAt(uint8_t addr, const char* msg)
{
 344:	cf 93       	push	r28
 346:	df 93       	push	r29
 348:	eb 01       	movw	r28, r22
    /* TODO task 1 LCD */

    LCD_writeInstr(LCD_INSTR_DDRAM | addr);
 34a:	80 68       	ori	r24, 0x80	; 128
 34c:	0e 94 58 01 	call	0x2b0	; 0x2b0 <LCD_writeInstr>
    LCD_print(msg);
 350:	ce 01       	movw	r24, r28
 352:	0e 94 93 01 	call	0x326	; 0x326 <LCD_print>
}
 356:	df 91       	pop	r29
 358:	cf 91       	pop	r28
 35a:	08 95       	ret

0000035c <shift_left>:
		
		shift_left(v, 0, 4);
	}
	
	return 0;	
}
 35c:	9a 01       	movw	r18, r20
 35e:	21 50       	subi	r18, 0x01	; 1
 360:	31 09       	sbc	r19, r1
 362:	12 16       	cp	r1, r18
 364:	13 06       	cpc	r1, r19
 366:	4c f4       	brge	.+18     	; 0x37a <shift_left+0x1e>
 368:	fc 01       	movw	r30, r24
 36a:	a9 01       	movw	r20, r18
 36c:	48 0f       	add	r20, r24
 36e:	59 1f       	adc	r21, r25
 370:	91 81       	ldd	r25, Z+1	; 0x01
 372:	91 93       	st	Z+, r25
 374:	e4 17       	cp	r30, r20
 376:	f5 07       	cpc	r31, r21
 378:	d9 f7       	brne	.-10     	; 0x370 <shift_left+0x14>
 37a:	08 95       	ret

0000037c <read_until_ok>:
 37c:	0f 93       	push	r16
 37e:	1f 93       	push	r17
 380:	cf 93       	push	r28
 382:	df 93       	push	r29
 384:	00 d0       	rcall	.+0      	; 0x386 <read_until_ok+0xa>
 386:	00 d0       	rcall	.+0      	; 0x388 <read_until_ok+0xc>
 388:	1f 92       	push	r1
 38a:	cd b7       	in	r28, 0x3d	; 61
 38c:	de b7       	in	r29, 0x3e	; 62
 38e:	1a 82       	std	Y+2, r1	; 0x02
 390:	19 82       	std	Y+1, r1	; 0x01
 392:	fe 01       	movw	r30, r28
 394:	33 96       	adiw	r30, 0x03	; 3
 396:	83 e0       	ldi	r24, 0x03	; 3
 398:	df 01       	movw	r26, r30
 39a:	1d 92       	st	X+, r1
 39c:	8a 95       	dec	r24
 39e:	e9 f7       	brne	.-6      	; 0x39a <read_until_ok+0x1e>
 3a0:	00 e0       	ldi	r16, 0x00	; 0
 3a2:	10 e0       	ldi	r17, 0x00	; 0
 3a4:	0e 94 c1 02 	call	0x582	; 0x582 <USART0_receive>
 3a8:	8c 83       	std	Y+4, r24	; 0x04
 3aa:	0f 5f       	subi	r16, 0xFF	; 255
 3ac:	1f 4f       	sbci	r17, 0xFF	; 255
 3ae:	64 e0       	ldi	r22, 0x04	; 4
 3b0:	71 e0       	ldi	r23, 0x01	; 1
 3b2:	ce 01       	movw	r24, r28
 3b4:	01 96       	adiw	r24, 0x01	; 1
 3b6:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <strcmp>
 3ba:	89 2b       	or	r24, r25
 3bc:	49 f0       	breq	.+18     	; 0x3d0 <read_until_ok+0x54>
 3be:	44 e0       	ldi	r20, 0x04	; 4
 3c0:	50 e0       	ldi	r21, 0x00	; 0
 3c2:	60 e0       	ldi	r22, 0x00	; 0
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	ce 01       	movw	r24, r28
 3c8:	01 96       	adiw	r24, 0x01	; 1
 3ca:	0e 94 ae 01 	call	0x35c	; 0x35c <shift_left>
 3ce:	ea cf       	rjmp	.-44     	; 0x3a4 <read_until_ok+0x28>
 3d0:	c8 01       	movw	r24, r16
 3d2:	0f 90       	pop	r0
 3d4:	0f 90       	pop	r0
 3d6:	0f 90       	pop	r0
 3d8:	0f 90       	pop	r0
 3da:	0f 90       	pop	r0
 3dc:	df 91       	pop	r29
 3de:	cf 91       	pop	r28
 3e0:	1f 91       	pop	r17
 3e2:	0f 91       	pop	r16
 3e4:	08 95       	ret

000003e6 <send_request>:
Host: 192.168.4.3:8080\r\n\r\n"

#define REQUEST_LEN strlen(REQUEST)

void send_request()
{
 3e6:	0f 93       	push	r16
 3e8:	1f 93       	push	r17
 3ea:	cf 93       	push	r28
 3ec:	df 93       	push	r29
 3ee:	cd b7       	in	r28, 0x3d	; 61
 3f0:	de b7       	in	r29, 0x3e	; 62
 3f2:	c0 54       	subi	r28, 0x40	; 64
 3f4:	d1 09       	sbc	r29, r1
 3f6:	0f b6       	in	r0, 0x3f	; 63
 3f8:	f8 94       	cli
 3fa:	de bf       	out	0x3e, r29	; 62
 3fc:	0f be       	out	0x3f, r0	; 63
 3fe:	cd bf       	out	0x3d, r28	; 61
	char buf[64];
	
	USART0_print("AT+CIPSTART=0,\"TCP\",\"192.168.4.3\",8080\r\n");
 400:	89 e0       	ldi	r24, 0x09	; 9
 402:	91 e0       	ldi	r25, 0x01	; 1
 404:	0e 94 c9 02 	call	0x592	; 0x592 <USART0_print>
	read_until_ok();
 408:	0e 94 be 01 	call	0x37c	; 0x37c <read_until_ok>
	
	sprintf(buf, "AT+CIPSEND=0,%d\r\n", REQUEST_LEN);
 40c:	1f 92       	push	r1
 40e:	83 e3       	ldi	r24, 0x33	; 51
 410:	8f 93       	push	r24
 412:	82 e3       	ldi	r24, 0x32	; 50
 414:	91 e0       	ldi	r25, 0x01	; 1
 416:	9f 93       	push	r25
 418:	8f 93       	push	r24
 41a:	8e 01       	movw	r16, r28
 41c:	0f 5f       	subi	r16, 0xFF	; 255
 41e:	1f 4f       	sbci	r17, 0xFF	; 255
 420:	1f 93       	push	r17
 422:	0f 93       	push	r16
 424:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <sprintf>
	USART0_print(buf);
 428:	c8 01       	movw	r24, r16
 42a:	0e 94 c9 02 	call	0x592	; 0x592 <USART0_print>
	read_until_ok();
 42e:	0e 94 be 01 	call	0x37c	; 0x37c <read_until_ok>
	
	USART0_print(REQUEST);
 432:	84 e4       	ldi	r24, 0x44	; 68
 434:	91 e0       	ldi	r25, 0x01	; 1
 436:	0e 94 c9 02 	call	0x592	; 0x592 <USART0_print>
	read_until_ok();
 43a:	0e 94 be 01 	call	0x37c	; 0x37c <read_until_ok>
	 */
	
	/* probabil Spring face close de unul singur, deci nu e neaparat nevoie
	 * de CIPCLOSE
	 */
	USART0_print("AT+CIPCLOSE=0\r\n");
 43e:	88 e7       	ldi	r24, 0x78	; 120
 440:	91 e0       	ldi	r25, 0x01	; 1
 442:	0e 94 c9 02 	call	0x592	; 0x592 <USART0_print>
	read_until_ok();
 446:	0e 94 be 01 	call	0x37c	; 0x37c <read_until_ok>
}
 44a:	0f 90       	pop	r0
 44c:	0f 90       	pop	r0
 44e:	0f 90       	pop	r0
 450:	0f 90       	pop	r0
 452:	0f 90       	pop	r0
 454:	0f 90       	pop	r0
 456:	c0 5c       	subi	r28, 0xC0	; 192
 458:	df 4f       	sbci	r29, 0xFF	; 255
 45a:	0f b6       	in	r0, 0x3f	; 63
 45c:	f8 94       	cli
 45e:	de bf       	out	0x3e, r29	; 62
 460:	0f be       	out	0x3f, r0	; 63
 462:	cd bf       	out	0x3d, r28	; 61
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	1f 91       	pop	r17
 46a:	0f 91       	pop	r16
 46c:	08 95       	ret

0000046e <__vector_5>:
#include "usart.h"			/* Include USART header file */

void send_request();

ISR(PCINT1_vect)
{
 46e:	1f 92       	push	r1
 470:	0f 92       	push	r0
 472:	0f b6       	in	r0, 0x3f	; 63
 474:	0f 92       	push	r0
 476:	11 24       	eor	r1, r1
 478:	2f 93       	push	r18
 47a:	3f 93       	push	r19
 47c:	4f 93       	push	r20
 47e:	5f 93       	push	r21
 480:	6f 93       	push	r22
 482:	7f 93       	push	r23
 484:	8f 93       	push	r24
 486:	9f 93       	push	r25
 488:	af 93       	push	r26
 48a:	bf 93       	push	r27
 48c:	ef 93       	push	r30
 48e:	ff 93       	push	r31
	if ((PINB & (1<<PB2)) == 0) {
 490:	1a 99       	sbic	0x03, 2	; 3
 492:	05 c0       	rjmp	.+10     	; 0x49e <__vector_5+0x30>
		/* Inversam starea pinului. */
		PORTD ^= (1 << PD7);
 494:	8b b1       	in	r24, 0x0b	; 11
 496:	80 58       	subi	r24, 0x80	; 128
 498:	8b b9       	out	0x0b, r24	; 11
		
		send_request();
 49a:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <send_request>
	}
}
 49e:	ff 91       	pop	r31
 4a0:	ef 91       	pop	r30
 4a2:	bf 91       	pop	r27
 4a4:	af 91       	pop	r26
 4a6:	9f 91       	pop	r25
 4a8:	8f 91       	pop	r24
 4aa:	7f 91       	pop	r23
 4ac:	6f 91       	pop	r22
 4ae:	5f 91       	pop	r21
 4b0:	4f 91       	pop	r20
 4b2:	3f 91       	pop	r19
 4b4:	2f 91       	pop	r18
 4b6:	0f 90       	pop	r0
 4b8:	0f be       	out	0x3f, r0	; 63
 4ba:	0f 90       	pop	r0
 4bc:	1f 90       	pop	r1
 4be:	18 95       	reti

000004c0 <main>:
}

int main(void)
{
	/* activate intreruperi globale */
	sei();
 4c0:	78 94       	sei
	
	/* configurarea butonului de la PD6 ca intrare */
	DDRB &= ~(1<<PB2);
 4c2:	22 98       	cbi	0x04, 2	; 4
	/* configurarea rezistentei de pull-up a PB2 */
	PORTB |= (1<<PB2);
 4c4:	2a 9a       	sbi	0x05, 2	; 5
	
	/* activare intrerupere pentru butonul PB2 */
	PCICR |= (1<<PCIE1);
 4c6:	e8 e6       	ldi	r30, 0x68	; 104
 4c8:	f0 e0       	ldi	r31, 0x00	; 0
 4ca:	80 81       	ld	r24, Z
 4cc:	82 60       	ori	r24, 0x02	; 2
 4ce:	80 83       	st	Z, r24
	PCMSK1 |= (1<<PCINT10);
 4d0:	ec e6       	ldi	r30, 0x6C	; 108
 4d2:	f0 e0       	ldi	r31, 0x00	; 0
 4d4:	80 81       	ld	r24, Z
 4d6:	84 60       	ori	r24, 0x04	; 4
 4d8:	80 83       	st	Z, r24
	
	LCD_init();
 4da:	0e 94 65 01 	call	0x2ca	; 0x2ca <LCD_init>
	USART0_init();
 4de:	0e 94 9c 02 	call	0x538	; 0x538 <USART0_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4e2:	2f ef       	ldi	r18, 0xFF	; 255
 4e4:	83 ed       	ldi	r24, 0xD3	; 211
 4e6:	90 e3       	ldi	r25, 0x30	; 48
 4e8:	21 50       	subi	r18, 0x01	; 1
 4ea:	80 40       	sbci	r24, 0x00	; 0
 4ec:	90 40       	sbci	r25, 0x00	; 0
 4ee:	e1 f7       	brne	.-8      	; 0x4e8 <main+0x28>
 4f0:	00 c0       	rjmp	.+0      	; 0x4f2 <main+0x32>
 4f2:	00 00       	nop
    _delay_ms(1000);
	
	/* activare USER led */
	DDRD |= (1 << PD7);
 4f4:	57 9a       	sbi	0x0a, 7	; 10
	PORTD |= (1 << PD7);
 4f6:	5f 9a       	sbi	0x0b, 7	; 11
	
	/* activare backlight LED */
	DDRC |= (1 << PC2);
 4f8:	3a 9a       	sbi	0x07, 2	; 7
	PORTC |= (1 << PC2);
 4fa:	42 9a       	sbi	0x08, 2	; 8
	
	
	USART0_print("ATE0\r\n");
 4fc:	88 e8       	ldi	r24, 0x88	; 136
 4fe:	91 e0       	ldi	r25, 0x01	; 1
 500:	0e 94 c9 02 	call	0x592	; 0x592 <USART0_print>
	read_until_ok();
 504:	0e 94 be 01 	call	0x37c	; 0x37c <read_until_ok>
	
	USART0_print("AT+CIPMUX=1\r\n");
 508:	8f e8       	ldi	r24, 0x8F	; 143
 50a:	91 e0       	ldi	r25, 0x01	; 1
 50c:	0e 94 c9 02 	call	0x592	; 0x592 <USART0_print>
	read_until_ok();
 510:	0e 94 be 01 	call	0x37c	; 0x37c <read_until_ok>
	
	USART0_print("AT+CIPSERVER=1,80\r\n");
 514:	8d e9       	ldi	r24, 0x9D	; 157
 516:	91 e0       	ldi	r25, 0x01	; 1
 518:	0e 94 c9 02 	call	0x592	; 0x592 <USART0_print>
	read_until_ok();
 51c:	0e 94 be 01 	call	0x37c	; 0x37c <read_until_ok>
	
	USART0_print("AT\r\n");
 520:	81 eb       	ldi	r24, 0xB1	; 177
 522:	91 e0       	ldi	r25, 0x01	; 1
 524:	0e 94 c9 02 	call	0x592	; 0x592 <USART0_print>
	read_until_ok();
 528:	0e 94 be 01 	call	0x37c	; 0x37c <read_until_ok>
	
	LCD_printAt(0, "ok");
 52c:	66 eb       	ldi	r22, 0xB6	; 182
 52e:	71 e0       	ldi	r23, 0x01	; 1
 530:	80 e0       	ldi	r24, 0x00	; 0
 532:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_printAt>
 536:	ff cf       	rjmp	.-2      	; 0x536 <__stack+0x37>

00000538 <USART0_init>:
 * Functie de initializare a controllerului USART
 */
void USART0_init()
{
    /* seteaza baud rate la 115.2K */
    UBRR0H = 0;
 538:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    UBRR0L = 8;
 53c:	88 e0       	ldi	r24, 0x08	; 8
 53e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    
	/* selecteaza mod asincron */
	UCSR0C &= ~(1<<UMSEL00);
 542:	e2 ec       	ldi	r30, 0xC2	; 194
 544:	f0 e0       	ldi	r31, 0x00	; 0
 546:	80 81       	ld	r24, Z
 548:	8f 7b       	andi	r24, 0xBF	; 191
 54a:	80 83       	st	Z, r24
	UCSR0C &= ~(1<<UMSEL01);
 54c:	80 81       	ld	r24, Z
 54e:	8f 77       	andi	r24, 0x7F	; 127
 550:	80 83       	st	Z, r24

    /* seteaza formatul frame-ului: 8 biti de date */
	UCSR0C |= (2<<UCSZ00);
 552:	80 81       	ld	r24, Z
 554:	84 60       	ori	r24, 0x04	; 4
 556:	80 83       	st	Z, r24
	
	/* 1 bit de stop */
    UCSR0C &= ~(1<<USBS0);
 558:	80 81       	ld	r24, Z
 55a:	87 7f       	andi	r24, 0xF7	; 247
 55c:	80 83       	st	Z, r24
    
	/* fara paritate */
	UCSR0C &= ~(1<<UPM00);
 55e:	80 81       	ld	r24, Z
 560:	8f 7e       	andi	r24, 0xEF	; 239
 562:	80 83       	st	Z, r24
    UCSR0C &= ~(1<<UPM01);
 564:	80 81       	ld	r24, Z
 566:	8f 7d       	andi	r24, 0xDF	; 223
 568:	80 83       	st	Z, r24
	
	/* porneste transmitatorul si receptorul */
	UCSR0B = (1<<TXEN0) | (1<<RXEN0);
 56a:	88 e1       	ldi	r24, 0x18	; 24
 56c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 570:	08 95       	ret

00000572 <USART0_transmit>:
 * @param data - caracterul de transmis
 */
void USART0_transmit(char data)
{
    /* asteapta pana bufferul e gol */
    while(!(UCSR0A & (1<<UDRE0)));
 572:	e0 ec       	ldi	r30, 0xC0	; 192
 574:	f0 e0       	ldi	r31, 0x00	; 0
 576:	90 81       	ld	r25, Z
 578:	95 ff       	sbrs	r25, 5
 57a:	fd cf       	rjmp	.-6      	; 0x576 <USART0_transmit+0x4>

    /* pune datele in buffer; transmisia va porni automat in urma scrierii */
    UDR0 = data;
 57c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 580:	08 95       	ret

00000582 <USART0_receive>:
 * @return - caracterul primit
 */
char USART0_receive()
{
    /* asteapta cat timp bufferul e gol */
    while(!(UCSR0A & (1<<RXC0)));
 582:	e0 ec       	ldi	r30, 0xC0	; 192
 584:	f0 e0       	ldi	r31, 0x00	; 0
 586:	80 81       	ld	r24, Z
 588:	88 23       	and	r24, r24
 58a:	ec f7       	brge	.-6      	; 0x586 <USART0_receive+0x4>

    /* returneaza datele din buffer */
    return UDR0;
 58c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 590:	08 95       	ret

00000592 <USART0_print>:
 * Functie ce transmite un sir de caractere prin USART
 *
 * @param data - sirul (terminat cu '\0') de transmis
 */
void USART0_print(const char *data)
{
 592:	cf 93       	push	r28
 594:	df 93       	push	r29
 596:	ec 01       	movw	r28, r24
    while(*data != '\0')
 598:	88 81       	ld	r24, Y
 59a:	88 23       	and	r24, r24
 59c:	31 f0       	breq	.+12     	; 0x5aa <USART0_print+0x18>
 59e:	21 96       	adiw	r28, 0x01	; 1
        USART0_transmit(*data++);
 5a0:	0e 94 b9 02 	call	0x572	; 0x572 <USART0_transmit>
 *
 * @param data - sirul (terminat cu '\0') de transmis
 */
void USART0_print(const char *data)
{
    while(*data != '\0')
 5a4:	89 91       	ld	r24, Y+
 5a6:	81 11       	cpse	r24, r1
 5a8:	fb cf       	rjmp	.-10     	; 0x5a0 <USART0_print+0xe>
        USART0_transmit(*data++);
}
 5aa:	df 91       	pop	r29
 5ac:	cf 91       	pop	r28
 5ae:	08 95       	ret

000005b0 <strcmp>:
 5b0:	fb 01       	movw	r30, r22
 5b2:	dc 01       	movw	r26, r24
 5b4:	8d 91       	ld	r24, X+
 5b6:	01 90       	ld	r0, Z+
 5b8:	80 19       	sub	r24, r0
 5ba:	01 10       	cpse	r0, r1
 5bc:	d9 f3       	breq	.-10     	; 0x5b4 <strcmp+0x4>
 5be:	99 0b       	sbc	r25, r25
 5c0:	08 95       	ret

000005c2 <sprintf>:
 5c2:	ae e0       	ldi	r26, 0x0E	; 14
 5c4:	b0 e0       	ldi	r27, 0x00	; 0
 5c6:	e7 ee       	ldi	r30, 0xE7	; 231
 5c8:	f2 e0       	ldi	r31, 0x02	; 2
 5ca:	0c 94 a2 05 	jmp	0xb44	; 0xb44 <__prologue_saves__+0x1c>
 5ce:	0d 89       	ldd	r16, Y+21	; 0x15
 5d0:	1e 89       	ldd	r17, Y+22	; 0x16
 5d2:	86 e0       	ldi	r24, 0x06	; 6
 5d4:	8c 83       	std	Y+4, r24	; 0x04
 5d6:	1a 83       	std	Y+2, r17	; 0x02
 5d8:	09 83       	std	Y+1, r16	; 0x01
 5da:	8f ef       	ldi	r24, 0xFF	; 255
 5dc:	9f e7       	ldi	r25, 0x7F	; 127
 5de:	9e 83       	std	Y+6, r25	; 0x06
 5e0:	8d 83       	std	Y+5, r24	; 0x05
 5e2:	ae 01       	movw	r20, r28
 5e4:	47 5e       	subi	r20, 0xE7	; 231
 5e6:	5f 4f       	sbci	r21, 0xFF	; 255
 5e8:	6f 89       	ldd	r22, Y+23	; 0x17
 5ea:	78 8d       	ldd	r23, Y+24	; 0x18
 5ec:	ce 01       	movw	r24, r28
 5ee:	01 96       	adiw	r24, 0x01	; 1
 5f0:	0e 94 03 03 	call	0x606	; 0x606 <vfprintf>
 5f4:	ef 81       	ldd	r30, Y+7	; 0x07
 5f6:	f8 85       	ldd	r31, Y+8	; 0x08
 5f8:	e0 0f       	add	r30, r16
 5fa:	f1 1f       	adc	r31, r17
 5fc:	10 82       	st	Z, r1
 5fe:	2e 96       	adiw	r28, 0x0e	; 14
 600:	e4 e0       	ldi	r30, 0x04	; 4
 602:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__epilogue_restores__+0x1c>

00000606 <vfprintf>:
 606:	ab e0       	ldi	r26, 0x0B	; 11
 608:	b0 e0       	ldi	r27, 0x00	; 0
 60a:	e9 e0       	ldi	r30, 0x09	; 9
 60c:	f3 e0       	ldi	r31, 0x03	; 3
 60e:	0c 94 94 05 	jmp	0xb28	; 0xb28 <__prologue_saves__>
 612:	6c 01       	movw	r12, r24
 614:	7b 01       	movw	r14, r22
 616:	8a 01       	movw	r16, r20
 618:	fc 01       	movw	r30, r24
 61a:	17 82       	std	Z+7, r1	; 0x07
 61c:	16 82       	std	Z+6, r1	; 0x06
 61e:	83 81       	ldd	r24, Z+3	; 0x03
 620:	81 ff       	sbrs	r24, 1
 622:	cc c1       	rjmp	.+920    	; 0x9bc <vfprintf+0x3b6>
 624:	ce 01       	movw	r24, r28
 626:	01 96       	adiw	r24, 0x01	; 1
 628:	3c 01       	movw	r6, r24
 62a:	f6 01       	movw	r30, r12
 62c:	93 81       	ldd	r25, Z+3	; 0x03
 62e:	f7 01       	movw	r30, r14
 630:	93 fd       	sbrc	r25, 3
 632:	85 91       	lpm	r24, Z+
 634:	93 ff       	sbrs	r25, 3
 636:	81 91       	ld	r24, Z+
 638:	7f 01       	movw	r14, r30
 63a:	88 23       	and	r24, r24
 63c:	09 f4       	brne	.+2      	; 0x640 <vfprintf+0x3a>
 63e:	ba c1       	rjmp	.+884    	; 0x9b4 <vfprintf+0x3ae>
 640:	85 32       	cpi	r24, 0x25	; 37
 642:	39 f4       	brne	.+14     	; 0x652 <vfprintf+0x4c>
 644:	93 fd       	sbrc	r25, 3
 646:	85 91       	lpm	r24, Z+
 648:	93 ff       	sbrs	r25, 3
 64a:	81 91       	ld	r24, Z+
 64c:	7f 01       	movw	r14, r30
 64e:	85 32       	cpi	r24, 0x25	; 37
 650:	29 f4       	brne	.+10     	; 0x65c <vfprintf+0x56>
 652:	b6 01       	movw	r22, r12
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <fputc>
 65a:	e7 cf       	rjmp	.-50     	; 0x62a <vfprintf+0x24>
 65c:	91 2c       	mov	r9, r1
 65e:	21 2c       	mov	r2, r1
 660:	31 2c       	mov	r3, r1
 662:	ff e1       	ldi	r31, 0x1F	; 31
 664:	f3 15       	cp	r31, r3
 666:	d8 f0       	brcs	.+54     	; 0x69e <vfprintf+0x98>
 668:	8b 32       	cpi	r24, 0x2B	; 43
 66a:	79 f0       	breq	.+30     	; 0x68a <vfprintf+0x84>
 66c:	38 f4       	brcc	.+14     	; 0x67c <vfprintf+0x76>
 66e:	80 32       	cpi	r24, 0x20	; 32
 670:	79 f0       	breq	.+30     	; 0x690 <vfprintf+0x8a>
 672:	83 32       	cpi	r24, 0x23	; 35
 674:	a1 f4       	brne	.+40     	; 0x69e <vfprintf+0x98>
 676:	23 2d       	mov	r18, r3
 678:	20 61       	ori	r18, 0x10	; 16
 67a:	1d c0       	rjmp	.+58     	; 0x6b6 <vfprintf+0xb0>
 67c:	8d 32       	cpi	r24, 0x2D	; 45
 67e:	61 f0       	breq	.+24     	; 0x698 <vfprintf+0x92>
 680:	80 33       	cpi	r24, 0x30	; 48
 682:	69 f4       	brne	.+26     	; 0x69e <vfprintf+0x98>
 684:	23 2d       	mov	r18, r3
 686:	21 60       	ori	r18, 0x01	; 1
 688:	16 c0       	rjmp	.+44     	; 0x6b6 <vfprintf+0xb0>
 68a:	83 2d       	mov	r24, r3
 68c:	82 60       	ori	r24, 0x02	; 2
 68e:	38 2e       	mov	r3, r24
 690:	e3 2d       	mov	r30, r3
 692:	e4 60       	ori	r30, 0x04	; 4
 694:	3e 2e       	mov	r3, r30
 696:	2a c0       	rjmp	.+84     	; 0x6ec <vfprintf+0xe6>
 698:	f3 2d       	mov	r31, r3
 69a:	f8 60       	ori	r31, 0x08	; 8
 69c:	1d c0       	rjmp	.+58     	; 0x6d8 <vfprintf+0xd2>
 69e:	37 fc       	sbrc	r3, 7
 6a0:	2d c0       	rjmp	.+90     	; 0x6fc <vfprintf+0xf6>
 6a2:	20 ed       	ldi	r18, 0xD0	; 208
 6a4:	28 0f       	add	r18, r24
 6a6:	2a 30       	cpi	r18, 0x0A	; 10
 6a8:	40 f0       	brcs	.+16     	; 0x6ba <vfprintf+0xb4>
 6aa:	8e 32       	cpi	r24, 0x2E	; 46
 6ac:	b9 f4       	brne	.+46     	; 0x6dc <vfprintf+0xd6>
 6ae:	36 fc       	sbrc	r3, 6
 6b0:	81 c1       	rjmp	.+770    	; 0x9b4 <vfprintf+0x3ae>
 6b2:	23 2d       	mov	r18, r3
 6b4:	20 64       	ori	r18, 0x40	; 64
 6b6:	32 2e       	mov	r3, r18
 6b8:	19 c0       	rjmp	.+50     	; 0x6ec <vfprintf+0xe6>
 6ba:	36 fe       	sbrs	r3, 6
 6bc:	06 c0       	rjmp	.+12     	; 0x6ca <vfprintf+0xc4>
 6be:	8a e0       	ldi	r24, 0x0A	; 10
 6c0:	98 9e       	mul	r9, r24
 6c2:	20 0d       	add	r18, r0
 6c4:	11 24       	eor	r1, r1
 6c6:	92 2e       	mov	r9, r18
 6c8:	11 c0       	rjmp	.+34     	; 0x6ec <vfprintf+0xe6>
 6ca:	ea e0       	ldi	r30, 0x0A	; 10
 6cc:	2e 9e       	mul	r2, r30
 6ce:	20 0d       	add	r18, r0
 6d0:	11 24       	eor	r1, r1
 6d2:	22 2e       	mov	r2, r18
 6d4:	f3 2d       	mov	r31, r3
 6d6:	f0 62       	ori	r31, 0x20	; 32
 6d8:	3f 2e       	mov	r3, r31
 6da:	08 c0       	rjmp	.+16     	; 0x6ec <vfprintf+0xe6>
 6dc:	8c 36       	cpi	r24, 0x6C	; 108
 6de:	21 f4       	brne	.+8      	; 0x6e8 <vfprintf+0xe2>
 6e0:	83 2d       	mov	r24, r3
 6e2:	80 68       	ori	r24, 0x80	; 128
 6e4:	38 2e       	mov	r3, r24
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <vfprintf+0xe6>
 6e8:	88 36       	cpi	r24, 0x68	; 104
 6ea:	41 f4       	brne	.+16     	; 0x6fc <vfprintf+0xf6>
 6ec:	f7 01       	movw	r30, r14
 6ee:	93 fd       	sbrc	r25, 3
 6f0:	85 91       	lpm	r24, Z+
 6f2:	93 ff       	sbrs	r25, 3
 6f4:	81 91       	ld	r24, Z+
 6f6:	7f 01       	movw	r14, r30
 6f8:	81 11       	cpse	r24, r1
 6fa:	b3 cf       	rjmp	.-154    	; 0x662 <vfprintf+0x5c>
 6fc:	98 2f       	mov	r25, r24
 6fe:	9f 7d       	andi	r25, 0xDF	; 223
 700:	95 54       	subi	r25, 0x45	; 69
 702:	93 30       	cpi	r25, 0x03	; 3
 704:	28 f4       	brcc	.+10     	; 0x710 <vfprintf+0x10a>
 706:	0c 5f       	subi	r16, 0xFC	; 252
 708:	1f 4f       	sbci	r17, 0xFF	; 255
 70a:	9f e3       	ldi	r25, 0x3F	; 63
 70c:	99 83       	std	Y+1, r25	; 0x01
 70e:	0d c0       	rjmp	.+26     	; 0x72a <vfprintf+0x124>
 710:	83 36       	cpi	r24, 0x63	; 99
 712:	31 f0       	breq	.+12     	; 0x720 <vfprintf+0x11a>
 714:	83 37       	cpi	r24, 0x73	; 115
 716:	71 f0       	breq	.+28     	; 0x734 <vfprintf+0x12e>
 718:	83 35       	cpi	r24, 0x53	; 83
 71a:	09 f0       	breq	.+2      	; 0x71e <vfprintf+0x118>
 71c:	59 c0       	rjmp	.+178    	; 0x7d0 <vfprintf+0x1ca>
 71e:	21 c0       	rjmp	.+66     	; 0x762 <vfprintf+0x15c>
 720:	f8 01       	movw	r30, r16
 722:	80 81       	ld	r24, Z
 724:	89 83       	std	Y+1, r24	; 0x01
 726:	0e 5f       	subi	r16, 0xFE	; 254
 728:	1f 4f       	sbci	r17, 0xFF	; 255
 72a:	88 24       	eor	r8, r8
 72c:	83 94       	inc	r8
 72e:	91 2c       	mov	r9, r1
 730:	53 01       	movw	r10, r6
 732:	13 c0       	rjmp	.+38     	; 0x75a <vfprintf+0x154>
 734:	28 01       	movw	r4, r16
 736:	f2 e0       	ldi	r31, 0x02	; 2
 738:	4f 0e       	add	r4, r31
 73a:	51 1c       	adc	r5, r1
 73c:	f8 01       	movw	r30, r16
 73e:	a0 80       	ld	r10, Z
 740:	b1 80       	ldd	r11, Z+1	; 0x01
 742:	36 fe       	sbrs	r3, 6
 744:	03 c0       	rjmp	.+6      	; 0x74c <vfprintf+0x146>
 746:	69 2d       	mov	r22, r9
 748:	70 e0       	ldi	r23, 0x00	; 0
 74a:	02 c0       	rjmp	.+4      	; 0x750 <vfprintf+0x14a>
 74c:	6f ef       	ldi	r22, 0xFF	; 255
 74e:	7f ef       	ldi	r23, 0xFF	; 255
 750:	c5 01       	movw	r24, r10
 752:	0e 94 ef 04 	call	0x9de	; 0x9de <strnlen>
 756:	4c 01       	movw	r8, r24
 758:	82 01       	movw	r16, r4
 75a:	f3 2d       	mov	r31, r3
 75c:	ff 77       	andi	r31, 0x7F	; 127
 75e:	3f 2e       	mov	r3, r31
 760:	16 c0       	rjmp	.+44     	; 0x78e <vfprintf+0x188>
 762:	28 01       	movw	r4, r16
 764:	22 e0       	ldi	r18, 0x02	; 2
 766:	42 0e       	add	r4, r18
 768:	51 1c       	adc	r5, r1
 76a:	f8 01       	movw	r30, r16
 76c:	a0 80       	ld	r10, Z
 76e:	b1 80       	ldd	r11, Z+1	; 0x01
 770:	36 fe       	sbrs	r3, 6
 772:	03 c0       	rjmp	.+6      	; 0x77a <vfprintf+0x174>
 774:	69 2d       	mov	r22, r9
 776:	70 e0       	ldi	r23, 0x00	; 0
 778:	02 c0       	rjmp	.+4      	; 0x77e <vfprintf+0x178>
 77a:	6f ef       	ldi	r22, 0xFF	; 255
 77c:	7f ef       	ldi	r23, 0xFF	; 255
 77e:	c5 01       	movw	r24, r10
 780:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <strnlen_P>
 784:	4c 01       	movw	r8, r24
 786:	f3 2d       	mov	r31, r3
 788:	f0 68       	ori	r31, 0x80	; 128
 78a:	3f 2e       	mov	r3, r31
 78c:	82 01       	movw	r16, r4
 78e:	33 fc       	sbrc	r3, 3
 790:	1b c0       	rjmp	.+54     	; 0x7c8 <vfprintf+0x1c2>
 792:	82 2d       	mov	r24, r2
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	88 16       	cp	r8, r24
 798:	99 06       	cpc	r9, r25
 79a:	b0 f4       	brcc	.+44     	; 0x7c8 <vfprintf+0x1c2>
 79c:	b6 01       	movw	r22, r12
 79e:	80 e2       	ldi	r24, 0x20	; 32
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <fputc>
 7a6:	2a 94       	dec	r2
 7a8:	f4 cf       	rjmp	.-24     	; 0x792 <vfprintf+0x18c>
 7aa:	f5 01       	movw	r30, r10
 7ac:	37 fc       	sbrc	r3, 7
 7ae:	85 91       	lpm	r24, Z+
 7b0:	37 fe       	sbrs	r3, 7
 7b2:	81 91       	ld	r24, Z+
 7b4:	5f 01       	movw	r10, r30
 7b6:	b6 01       	movw	r22, r12
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <fputc>
 7be:	21 10       	cpse	r2, r1
 7c0:	2a 94       	dec	r2
 7c2:	21 e0       	ldi	r18, 0x01	; 1
 7c4:	82 1a       	sub	r8, r18
 7c6:	91 08       	sbc	r9, r1
 7c8:	81 14       	cp	r8, r1
 7ca:	91 04       	cpc	r9, r1
 7cc:	71 f7       	brne	.-36     	; 0x7aa <vfprintf+0x1a4>
 7ce:	e8 c0       	rjmp	.+464    	; 0x9a0 <vfprintf+0x39a>
 7d0:	84 36       	cpi	r24, 0x64	; 100
 7d2:	11 f0       	breq	.+4      	; 0x7d8 <vfprintf+0x1d2>
 7d4:	89 36       	cpi	r24, 0x69	; 105
 7d6:	41 f5       	brne	.+80     	; 0x828 <vfprintf+0x222>
 7d8:	f8 01       	movw	r30, r16
 7da:	37 fe       	sbrs	r3, 7
 7dc:	07 c0       	rjmp	.+14     	; 0x7ec <vfprintf+0x1e6>
 7de:	60 81       	ld	r22, Z
 7e0:	71 81       	ldd	r23, Z+1	; 0x01
 7e2:	82 81       	ldd	r24, Z+2	; 0x02
 7e4:	93 81       	ldd	r25, Z+3	; 0x03
 7e6:	0c 5f       	subi	r16, 0xFC	; 252
 7e8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ea:	08 c0       	rjmp	.+16     	; 0x7fc <vfprintf+0x1f6>
 7ec:	60 81       	ld	r22, Z
 7ee:	71 81       	ldd	r23, Z+1	; 0x01
 7f0:	07 2e       	mov	r0, r23
 7f2:	00 0c       	add	r0, r0
 7f4:	88 0b       	sbc	r24, r24
 7f6:	99 0b       	sbc	r25, r25
 7f8:	0e 5f       	subi	r16, 0xFE	; 254
 7fa:	1f 4f       	sbci	r17, 0xFF	; 255
 7fc:	f3 2d       	mov	r31, r3
 7fe:	ff 76       	andi	r31, 0x6F	; 111
 800:	3f 2e       	mov	r3, r31
 802:	97 ff       	sbrs	r25, 7
 804:	09 c0       	rjmp	.+18     	; 0x818 <vfprintf+0x212>
 806:	90 95       	com	r25
 808:	80 95       	com	r24
 80a:	70 95       	com	r23
 80c:	61 95       	neg	r22
 80e:	7f 4f       	sbci	r23, 0xFF	; 255
 810:	8f 4f       	sbci	r24, 0xFF	; 255
 812:	9f 4f       	sbci	r25, 0xFF	; 255
 814:	f0 68       	ori	r31, 0x80	; 128
 816:	3f 2e       	mov	r3, r31
 818:	2a e0       	ldi	r18, 0x0A	; 10
 81a:	30 e0       	ldi	r19, 0x00	; 0
 81c:	a3 01       	movw	r20, r6
 81e:	0e 94 36 05 	call	0xa6c	; 0xa6c <__ultoa_invert>
 822:	88 2e       	mov	r8, r24
 824:	86 18       	sub	r8, r6
 826:	45 c0       	rjmp	.+138    	; 0x8b2 <vfprintf+0x2ac>
 828:	85 37       	cpi	r24, 0x75	; 117
 82a:	31 f4       	brne	.+12     	; 0x838 <vfprintf+0x232>
 82c:	23 2d       	mov	r18, r3
 82e:	2f 7e       	andi	r18, 0xEF	; 239
 830:	b2 2e       	mov	r11, r18
 832:	2a e0       	ldi	r18, 0x0A	; 10
 834:	30 e0       	ldi	r19, 0x00	; 0
 836:	25 c0       	rjmp	.+74     	; 0x882 <vfprintf+0x27c>
 838:	93 2d       	mov	r25, r3
 83a:	99 7f       	andi	r25, 0xF9	; 249
 83c:	b9 2e       	mov	r11, r25
 83e:	8f 36       	cpi	r24, 0x6F	; 111
 840:	c1 f0       	breq	.+48     	; 0x872 <vfprintf+0x26c>
 842:	18 f4       	brcc	.+6      	; 0x84a <vfprintf+0x244>
 844:	88 35       	cpi	r24, 0x58	; 88
 846:	79 f0       	breq	.+30     	; 0x866 <vfprintf+0x260>
 848:	b5 c0       	rjmp	.+362    	; 0x9b4 <vfprintf+0x3ae>
 84a:	80 37       	cpi	r24, 0x70	; 112
 84c:	19 f0       	breq	.+6      	; 0x854 <vfprintf+0x24e>
 84e:	88 37       	cpi	r24, 0x78	; 120
 850:	21 f0       	breq	.+8      	; 0x85a <vfprintf+0x254>
 852:	b0 c0       	rjmp	.+352    	; 0x9b4 <vfprintf+0x3ae>
 854:	e9 2f       	mov	r30, r25
 856:	e0 61       	ori	r30, 0x10	; 16
 858:	be 2e       	mov	r11, r30
 85a:	b4 fe       	sbrs	r11, 4
 85c:	0d c0       	rjmp	.+26     	; 0x878 <vfprintf+0x272>
 85e:	fb 2d       	mov	r31, r11
 860:	f4 60       	ori	r31, 0x04	; 4
 862:	bf 2e       	mov	r11, r31
 864:	09 c0       	rjmp	.+18     	; 0x878 <vfprintf+0x272>
 866:	34 fe       	sbrs	r3, 4
 868:	0a c0       	rjmp	.+20     	; 0x87e <vfprintf+0x278>
 86a:	29 2f       	mov	r18, r25
 86c:	26 60       	ori	r18, 0x06	; 6
 86e:	b2 2e       	mov	r11, r18
 870:	06 c0       	rjmp	.+12     	; 0x87e <vfprintf+0x278>
 872:	28 e0       	ldi	r18, 0x08	; 8
 874:	30 e0       	ldi	r19, 0x00	; 0
 876:	05 c0       	rjmp	.+10     	; 0x882 <vfprintf+0x27c>
 878:	20 e1       	ldi	r18, 0x10	; 16
 87a:	30 e0       	ldi	r19, 0x00	; 0
 87c:	02 c0       	rjmp	.+4      	; 0x882 <vfprintf+0x27c>
 87e:	20 e1       	ldi	r18, 0x10	; 16
 880:	32 e0       	ldi	r19, 0x02	; 2
 882:	f8 01       	movw	r30, r16
 884:	b7 fe       	sbrs	r11, 7
 886:	07 c0       	rjmp	.+14     	; 0x896 <vfprintf+0x290>
 888:	60 81       	ld	r22, Z
 88a:	71 81       	ldd	r23, Z+1	; 0x01
 88c:	82 81       	ldd	r24, Z+2	; 0x02
 88e:	93 81       	ldd	r25, Z+3	; 0x03
 890:	0c 5f       	subi	r16, 0xFC	; 252
 892:	1f 4f       	sbci	r17, 0xFF	; 255
 894:	06 c0       	rjmp	.+12     	; 0x8a2 <vfprintf+0x29c>
 896:	60 81       	ld	r22, Z
 898:	71 81       	ldd	r23, Z+1	; 0x01
 89a:	80 e0       	ldi	r24, 0x00	; 0
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	0e 5f       	subi	r16, 0xFE	; 254
 8a0:	1f 4f       	sbci	r17, 0xFF	; 255
 8a2:	a3 01       	movw	r20, r6
 8a4:	0e 94 36 05 	call	0xa6c	; 0xa6c <__ultoa_invert>
 8a8:	88 2e       	mov	r8, r24
 8aa:	86 18       	sub	r8, r6
 8ac:	fb 2d       	mov	r31, r11
 8ae:	ff 77       	andi	r31, 0x7F	; 127
 8b0:	3f 2e       	mov	r3, r31
 8b2:	36 fe       	sbrs	r3, 6
 8b4:	0d c0       	rjmp	.+26     	; 0x8d0 <vfprintf+0x2ca>
 8b6:	23 2d       	mov	r18, r3
 8b8:	2e 7f       	andi	r18, 0xFE	; 254
 8ba:	a2 2e       	mov	r10, r18
 8bc:	89 14       	cp	r8, r9
 8be:	58 f4       	brcc	.+22     	; 0x8d6 <vfprintf+0x2d0>
 8c0:	34 fe       	sbrs	r3, 4
 8c2:	0b c0       	rjmp	.+22     	; 0x8da <vfprintf+0x2d4>
 8c4:	32 fc       	sbrc	r3, 2
 8c6:	09 c0       	rjmp	.+18     	; 0x8da <vfprintf+0x2d4>
 8c8:	83 2d       	mov	r24, r3
 8ca:	8e 7e       	andi	r24, 0xEE	; 238
 8cc:	a8 2e       	mov	r10, r24
 8ce:	05 c0       	rjmp	.+10     	; 0x8da <vfprintf+0x2d4>
 8d0:	b8 2c       	mov	r11, r8
 8d2:	a3 2c       	mov	r10, r3
 8d4:	03 c0       	rjmp	.+6      	; 0x8dc <vfprintf+0x2d6>
 8d6:	b8 2c       	mov	r11, r8
 8d8:	01 c0       	rjmp	.+2      	; 0x8dc <vfprintf+0x2d6>
 8da:	b9 2c       	mov	r11, r9
 8dc:	a4 fe       	sbrs	r10, 4
 8de:	0f c0       	rjmp	.+30     	; 0x8fe <vfprintf+0x2f8>
 8e0:	fe 01       	movw	r30, r28
 8e2:	e8 0d       	add	r30, r8
 8e4:	f1 1d       	adc	r31, r1
 8e6:	80 81       	ld	r24, Z
 8e8:	80 33       	cpi	r24, 0x30	; 48
 8ea:	21 f4       	brne	.+8      	; 0x8f4 <vfprintf+0x2ee>
 8ec:	9a 2d       	mov	r25, r10
 8ee:	99 7e       	andi	r25, 0xE9	; 233
 8f0:	a9 2e       	mov	r10, r25
 8f2:	09 c0       	rjmp	.+18     	; 0x906 <vfprintf+0x300>
 8f4:	a2 fe       	sbrs	r10, 2
 8f6:	06 c0       	rjmp	.+12     	; 0x904 <vfprintf+0x2fe>
 8f8:	b3 94       	inc	r11
 8fa:	b3 94       	inc	r11
 8fc:	04 c0       	rjmp	.+8      	; 0x906 <vfprintf+0x300>
 8fe:	8a 2d       	mov	r24, r10
 900:	86 78       	andi	r24, 0x86	; 134
 902:	09 f0       	breq	.+2      	; 0x906 <vfprintf+0x300>
 904:	b3 94       	inc	r11
 906:	a3 fc       	sbrc	r10, 3
 908:	11 c0       	rjmp	.+34     	; 0x92c <vfprintf+0x326>
 90a:	a0 fe       	sbrs	r10, 0
 90c:	06 c0       	rjmp	.+12     	; 0x91a <vfprintf+0x314>
 90e:	b2 14       	cp	r11, r2
 910:	88 f4       	brcc	.+34     	; 0x934 <vfprintf+0x32e>
 912:	28 0c       	add	r2, r8
 914:	92 2c       	mov	r9, r2
 916:	9b 18       	sub	r9, r11
 918:	0e c0       	rjmp	.+28     	; 0x936 <vfprintf+0x330>
 91a:	b2 14       	cp	r11, r2
 91c:	60 f4       	brcc	.+24     	; 0x936 <vfprintf+0x330>
 91e:	b6 01       	movw	r22, r12
 920:	80 e2       	ldi	r24, 0x20	; 32
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <fputc>
 928:	b3 94       	inc	r11
 92a:	f7 cf       	rjmp	.-18     	; 0x91a <vfprintf+0x314>
 92c:	b2 14       	cp	r11, r2
 92e:	18 f4       	brcc	.+6      	; 0x936 <vfprintf+0x330>
 930:	2b 18       	sub	r2, r11
 932:	02 c0       	rjmp	.+4      	; 0x938 <vfprintf+0x332>
 934:	98 2c       	mov	r9, r8
 936:	21 2c       	mov	r2, r1
 938:	a4 fe       	sbrs	r10, 4
 93a:	10 c0       	rjmp	.+32     	; 0x95c <vfprintf+0x356>
 93c:	b6 01       	movw	r22, r12
 93e:	80 e3       	ldi	r24, 0x30	; 48
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <fputc>
 946:	a2 fe       	sbrs	r10, 2
 948:	17 c0       	rjmp	.+46     	; 0x978 <vfprintf+0x372>
 94a:	a1 fc       	sbrc	r10, 1
 94c:	03 c0       	rjmp	.+6      	; 0x954 <vfprintf+0x34e>
 94e:	88 e7       	ldi	r24, 0x78	; 120
 950:	90 e0       	ldi	r25, 0x00	; 0
 952:	02 c0       	rjmp	.+4      	; 0x958 <vfprintf+0x352>
 954:	88 e5       	ldi	r24, 0x58	; 88
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	b6 01       	movw	r22, r12
 95a:	0c c0       	rjmp	.+24     	; 0x974 <vfprintf+0x36e>
 95c:	8a 2d       	mov	r24, r10
 95e:	86 78       	andi	r24, 0x86	; 134
 960:	59 f0       	breq	.+22     	; 0x978 <vfprintf+0x372>
 962:	a1 fe       	sbrs	r10, 1
 964:	02 c0       	rjmp	.+4      	; 0x96a <vfprintf+0x364>
 966:	8b e2       	ldi	r24, 0x2B	; 43
 968:	01 c0       	rjmp	.+2      	; 0x96c <vfprintf+0x366>
 96a:	80 e2       	ldi	r24, 0x20	; 32
 96c:	a7 fc       	sbrc	r10, 7
 96e:	8d e2       	ldi	r24, 0x2D	; 45
 970:	b6 01       	movw	r22, r12
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <fputc>
 978:	89 14       	cp	r8, r9
 97a:	38 f4       	brcc	.+14     	; 0x98a <vfprintf+0x384>
 97c:	b6 01       	movw	r22, r12
 97e:	80 e3       	ldi	r24, 0x30	; 48
 980:	90 e0       	ldi	r25, 0x00	; 0
 982:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <fputc>
 986:	9a 94       	dec	r9
 988:	f7 cf       	rjmp	.-18     	; 0x978 <vfprintf+0x372>
 98a:	8a 94       	dec	r8
 98c:	f3 01       	movw	r30, r6
 98e:	e8 0d       	add	r30, r8
 990:	f1 1d       	adc	r31, r1
 992:	80 81       	ld	r24, Z
 994:	b6 01       	movw	r22, r12
 996:	90 e0       	ldi	r25, 0x00	; 0
 998:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <fputc>
 99c:	81 10       	cpse	r8, r1
 99e:	f5 cf       	rjmp	.-22     	; 0x98a <vfprintf+0x384>
 9a0:	22 20       	and	r2, r2
 9a2:	09 f4       	brne	.+2      	; 0x9a6 <vfprintf+0x3a0>
 9a4:	42 ce       	rjmp	.-892    	; 0x62a <vfprintf+0x24>
 9a6:	b6 01       	movw	r22, r12
 9a8:	80 e2       	ldi	r24, 0x20	; 32
 9aa:	90 e0       	ldi	r25, 0x00	; 0
 9ac:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <fputc>
 9b0:	2a 94       	dec	r2
 9b2:	f6 cf       	rjmp	.-20     	; 0x9a0 <vfprintf+0x39a>
 9b4:	f6 01       	movw	r30, r12
 9b6:	86 81       	ldd	r24, Z+6	; 0x06
 9b8:	97 81       	ldd	r25, Z+7	; 0x07
 9ba:	02 c0       	rjmp	.+4      	; 0x9c0 <vfprintf+0x3ba>
 9bc:	8f ef       	ldi	r24, 0xFF	; 255
 9be:	9f ef       	ldi	r25, 0xFF	; 255
 9c0:	2b 96       	adiw	r28, 0x0b	; 11
 9c2:	e2 e1       	ldi	r30, 0x12	; 18
 9c4:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <__epilogue_restores__>

000009c8 <strnlen_P>:
 9c8:	fc 01       	movw	r30, r24
 9ca:	05 90       	lpm	r0, Z+
 9cc:	61 50       	subi	r22, 0x01	; 1
 9ce:	70 40       	sbci	r23, 0x00	; 0
 9d0:	01 10       	cpse	r0, r1
 9d2:	d8 f7       	brcc	.-10     	; 0x9ca <strnlen_P+0x2>
 9d4:	80 95       	com	r24
 9d6:	90 95       	com	r25
 9d8:	8e 0f       	add	r24, r30
 9da:	9f 1f       	adc	r25, r31
 9dc:	08 95       	ret

000009de <strnlen>:
 9de:	fc 01       	movw	r30, r24
 9e0:	61 50       	subi	r22, 0x01	; 1
 9e2:	70 40       	sbci	r23, 0x00	; 0
 9e4:	01 90       	ld	r0, Z+
 9e6:	01 10       	cpse	r0, r1
 9e8:	d8 f7       	brcc	.-10     	; 0x9e0 <strnlen+0x2>
 9ea:	80 95       	com	r24
 9ec:	90 95       	com	r25
 9ee:	8e 0f       	add	r24, r30
 9f0:	9f 1f       	adc	r25, r31
 9f2:	08 95       	ret

000009f4 <fputc>:
 9f4:	0f 93       	push	r16
 9f6:	1f 93       	push	r17
 9f8:	cf 93       	push	r28
 9fa:	df 93       	push	r29
 9fc:	fb 01       	movw	r30, r22
 9fe:	23 81       	ldd	r18, Z+3	; 0x03
 a00:	21 fd       	sbrc	r18, 1
 a02:	03 c0       	rjmp	.+6      	; 0xa0a <fputc+0x16>
 a04:	8f ef       	ldi	r24, 0xFF	; 255
 a06:	9f ef       	ldi	r25, 0xFF	; 255
 a08:	2c c0       	rjmp	.+88     	; 0xa62 <fputc+0x6e>
 a0a:	22 ff       	sbrs	r18, 2
 a0c:	16 c0       	rjmp	.+44     	; 0xa3a <fputc+0x46>
 a0e:	46 81       	ldd	r20, Z+6	; 0x06
 a10:	57 81       	ldd	r21, Z+7	; 0x07
 a12:	24 81       	ldd	r18, Z+4	; 0x04
 a14:	35 81       	ldd	r19, Z+5	; 0x05
 a16:	42 17       	cp	r20, r18
 a18:	53 07       	cpc	r21, r19
 a1a:	44 f4       	brge	.+16     	; 0xa2c <fputc+0x38>
 a1c:	a0 81       	ld	r26, Z
 a1e:	b1 81       	ldd	r27, Z+1	; 0x01
 a20:	9d 01       	movw	r18, r26
 a22:	2f 5f       	subi	r18, 0xFF	; 255
 a24:	3f 4f       	sbci	r19, 0xFF	; 255
 a26:	31 83       	std	Z+1, r19	; 0x01
 a28:	20 83       	st	Z, r18
 a2a:	8c 93       	st	X, r24
 a2c:	26 81       	ldd	r18, Z+6	; 0x06
 a2e:	37 81       	ldd	r19, Z+7	; 0x07
 a30:	2f 5f       	subi	r18, 0xFF	; 255
 a32:	3f 4f       	sbci	r19, 0xFF	; 255
 a34:	37 83       	std	Z+7, r19	; 0x07
 a36:	26 83       	std	Z+6, r18	; 0x06
 a38:	14 c0       	rjmp	.+40     	; 0xa62 <fputc+0x6e>
 a3a:	8b 01       	movw	r16, r22
 a3c:	ec 01       	movw	r28, r24
 a3e:	fb 01       	movw	r30, r22
 a40:	00 84       	ldd	r0, Z+8	; 0x08
 a42:	f1 85       	ldd	r31, Z+9	; 0x09
 a44:	e0 2d       	mov	r30, r0
 a46:	09 95       	icall
 a48:	89 2b       	or	r24, r25
 a4a:	e1 f6       	brne	.-72     	; 0xa04 <fputc+0x10>
 a4c:	d8 01       	movw	r26, r16
 a4e:	16 96       	adiw	r26, 0x06	; 6
 a50:	8d 91       	ld	r24, X+
 a52:	9c 91       	ld	r25, X
 a54:	17 97       	sbiw	r26, 0x07	; 7
 a56:	01 96       	adiw	r24, 0x01	; 1
 a58:	17 96       	adiw	r26, 0x07	; 7
 a5a:	9c 93       	st	X, r25
 a5c:	8e 93       	st	-X, r24
 a5e:	16 97       	sbiw	r26, 0x06	; 6
 a60:	ce 01       	movw	r24, r28
 a62:	df 91       	pop	r29
 a64:	cf 91       	pop	r28
 a66:	1f 91       	pop	r17
 a68:	0f 91       	pop	r16
 a6a:	08 95       	ret

00000a6c <__ultoa_invert>:
 a6c:	fa 01       	movw	r30, r20
 a6e:	aa 27       	eor	r26, r26
 a70:	28 30       	cpi	r18, 0x08	; 8
 a72:	51 f1       	breq	.+84     	; 0xac8 <__ultoa_invert+0x5c>
 a74:	20 31       	cpi	r18, 0x10	; 16
 a76:	81 f1       	breq	.+96     	; 0xad8 <__ultoa_invert+0x6c>
 a78:	e8 94       	clt
 a7a:	6f 93       	push	r22
 a7c:	6e 7f       	andi	r22, 0xFE	; 254
 a7e:	6e 5f       	subi	r22, 0xFE	; 254
 a80:	7f 4f       	sbci	r23, 0xFF	; 255
 a82:	8f 4f       	sbci	r24, 0xFF	; 255
 a84:	9f 4f       	sbci	r25, 0xFF	; 255
 a86:	af 4f       	sbci	r26, 0xFF	; 255
 a88:	b1 e0       	ldi	r27, 0x01	; 1
 a8a:	3e d0       	rcall	.+124    	; 0xb08 <__ultoa_invert+0x9c>
 a8c:	b4 e0       	ldi	r27, 0x04	; 4
 a8e:	3c d0       	rcall	.+120    	; 0xb08 <__ultoa_invert+0x9c>
 a90:	67 0f       	add	r22, r23
 a92:	78 1f       	adc	r23, r24
 a94:	89 1f       	adc	r24, r25
 a96:	9a 1f       	adc	r25, r26
 a98:	a1 1d       	adc	r26, r1
 a9a:	68 0f       	add	r22, r24
 a9c:	79 1f       	adc	r23, r25
 a9e:	8a 1f       	adc	r24, r26
 aa0:	91 1d       	adc	r25, r1
 aa2:	a1 1d       	adc	r26, r1
 aa4:	6a 0f       	add	r22, r26
 aa6:	71 1d       	adc	r23, r1
 aa8:	81 1d       	adc	r24, r1
 aaa:	91 1d       	adc	r25, r1
 aac:	a1 1d       	adc	r26, r1
 aae:	20 d0       	rcall	.+64     	; 0xaf0 <__ultoa_invert+0x84>
 ab0:	09 f4       	brne	.+2      	; 0xab4 <__ultoa_invert+0x48>
 ab2:	68 94       	set
 ab4:	3f 91       	pop	r19
 ab6:	2a e0       	ldi	r18, 0x0A	; 10
 ab8:	26 9f       	mul	r18, r22
 aba:	11 24       	eor	r1, r1
 abc:	30 19       	sub	r19, r0
 abe:	30 5d       	subi	r19, 0xD0	; 208
 ac0:	31 93       	st	Z+, r19
 ac2:	de f6       	brtc	.-74     	; 0xa7a <__ultoa_invert+0xe>
 ac4:	cf 01       	movw	r24, r30
 ac6:	08 95       	ret
 ac8:	46 2f       	mov	r20, r22
 aca:	47 70       	andi	r20, 0x07	; 7
 acc:	40 5d       	subi	r20, 0xD0	; 208
 ace:	41 93       	st	Z+, r20
 ad0:	b3 e0       	ldi	r27, 0x03	; 3
 ad2:	0f d0       	rcall	.+30     	; 0xaf2 <__ultoa_invert+0x86>
 ad4:	c9 f7       	brne	.-14     	; 0xac8 <__ultoa_invert+0x5c>
 ad6:	f6 cf       	rjmp	.-20     	; 0xac4 <__ultoa_invert+0x58>
 ad8:	46 2f       	mov	r20, r22
 ada:	4f 70       	andi	r20, 0x0F	; 15
 adc:	40 5d       	subi	r20, 0xD0	; 208
 ade:	4a 33       	cpi	r20, 0x3A	; 58
 ae0:	18 f0       	brcs	.+6      	; 0xae8 <__ultoa_invert+0x7c>
 ae2:	49 5d       	subi	r20, 0xD9	; 217
 ae4:	31 fd       	sbrc	r19, 1
 ae6:	40 52       	subi	r20, 0x20	; 32
 ae8:	41 93       	st	Z+, r20
 aea:	02 d0       	rcall	.+4      	; 0xaf0 <__ultoa_invert+0x84>
 aec:	a9 f7       	brne	.-22     	; 0xad8 <__ultoa_invert+0x6c>
 aee:	ea cf       	rjmp	.-44     	; 0xac4 <__ultoa_invert+0x58>
 af0:	b4 e0       	ldi	r27, 0x04	; 4
 af2:	a6 95       	lsr	r26
 af4:	97 95       	ror	r25
 af6:	87 95       	ror	r24
 af8:	77 95       	ror	r23
 afa:	67 95       	ror	r22
 afc:	ba 95       	dec	r27
 afe:	c9 f7       	brne	.-14     	; 0xaf2 <__ultoa_invert+0x86>
 b00:	00 97       	sbiw	r24, 0x00	; 0
 b02:	61 05       	cpc	r22, r1
 b04:	71 05       	cpc	r23, r1
 b06:	08 95       	ret
 b08:	9b 01       	movw	r18, r22
 b0a:	ac 01       	movw	r20, r24
 b0c:	0a 2e       	mov	r0, r26
 b0e:	06 94       	lsr	r0
 b10:	57 95       	ror	r21
 b12:	47 95       	ror	r20
 b14:	37 95       	ror	r19
 b16:	27 95       	ror	r18
 b18:	ba 95       	dec	r27
 b1a:	c9 f7       	brne	.-14     	; 0xb0e <__ultoa_invert+0xa2>
 b1c:	62 0f       	add	r22, r18
 b1e:	73 1f       	adc	r23, r19
 b20:	84 1f       	adc	r24, r20
 b22:	95 1f       	adc	r25, r21
 b24:	a0 1d       	adc	r26, r0
 b26:	08 95       	ret

00000b28 <__prologue_saves__>:
 b28:	2f 92       	push	r2
 b2a:	3f 92       	push	r3
 b2c:	4f 92       	push	r4
 b2e:	5f 92       	push	r5
 b30:	6f 92       	push	r6
 b32:	7f 92       	push	r7
 b34:	8f 92       	push	r8
 b36:	9f 92       	push	r9
 b38:	af 92       	push	r10
 b3a:	bf 92       	push	r11
 b3c:	cf 92       	push	r12
 b3e:	df 92       	push	r13
 b40:	ef 92       	push	r14
 b42:	ff 92       	push	r15
 b44:	0f 93       	push	r16
 b46:	1f 93       	push	r17
 b48:	cf 93       	push	r28
 b4a:	df 93       	push	r29
 b4c:	cd b7       	in	r28, 0x3d	; 61
 b4e:	de b7       	in	r29, 0x3e	; 62
 b50:	ca 1b       	sub	r28, r26
 b52:	db 0b       	sbc	r29, r27
 b54:	0f b6       	in	r0, 0x3f	; 63
 b56:	f8 94       	cli
 b58:	de bf       	out	0x3e, r29	; 62
 b5a:	0f be       	out	0x3f, r0	; 63
 b5c:	cd bf       	out	0x3d, r28	; 61
 b5e:	09 94       	ijmp

00000b60 <__epilogue_restores__>:
 b60:	2a 88       	ldd	r2, Y+18	; 0x12
 b62:	39 88       	ldd	r3, Y+17	; 0x11
 b64:	48 88       	ldd	r4, Y+16	; 0x10
 b66:	5f 84       	ldd	r5, Y+15	; 0x0f
 b68:	6e 84       	ldd	r6, Y+14	; 0x0e
 b6a:	7d 84       	ldd	r7, Y+13	; 0x0d
 b6c:	8c 84       	ldd	r8, Y+12	; 0x0c
 b6e:	9b 84       	ldd	r9, Y+11	; 0x0b
 b70:	aa 84       	ldd	r10, Y+10	; 0x0a
 b72:	b9 84       	ldd	r11, Y+9	; 0x09
 b74:	c8 84       	ldd	r12, Y+8	; 0x08
 b76:	df 80       	ldd	r13, Y+7	; 0x07
 b78:	ee 80       	ldd	r14, Y+6	; 0x06
 b7a:	fd 80       	ldd	r15, Y+5	; 0x05
 b7c:	0c 81       	ldd	r16, Y+4	; 0x04
 b7e:	1b 81       	ldd	r17, Y+3	; 0x03
 b80:	aa 81       	ldd	r26, Y+2	; 0x02
 b82:	b9 81       	ldd	r27, Y+1	; 0x01
 b84:	ce 0f       	add	r28, r30
 b86:	d1 1d       	adc	r29, r1
 b88:	0f b6       	in	r0, 0x3f	; 63
 b8a:	f8 94       	cli
 b8c:	de bf       	out	0x3e, r29	; 62
 b8e:	0f be       	out	0x3f, r0	; 63
 b90:	cd bf       	out	0x3d, r28	; 61
 b92:	ed 01       	movw	r28, r26
 b94:	08 95       	ret

00000b96 <_exit>:
 b96:	f8 94       	cli

00000b98 <__stop_program>:
 b98:	ff cf       	rjmp	.-2      	; 0xb98 <__stop_program>
